/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

shadowJar {
    archiveBaseName.set("xframes")
    archiveVersion.set("1.0")
    archiveClassifier.set("")
}

mainClassName = "dev.xframes.XFramesWrapperMain"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use Scala 2.13 in our library project
    implementation libs.scala.library

    // This dependency is used by the application.
    implementation libs.guava

    implementation 'com.typesafe.play:play-json_2.13:2.10.0'

    // Use Scalatest for testing our library
    testImplementation libs.junit
    testImplementation libs.scalatest.v2.v13
    testImplementation libs.junit.v4.v13.v2.v13

    // Need scala-xml at test runtime
    testRuntimeOnly libs.scala.xml.v2.v13
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'dev.xframes.XFramesWrapperMain'
}

task runMain(type: JavaExec) {
    mainClass = 'dev.xframes.XFramesWrapperMain'
    classpath = sourceSets.main.runtimeClasspath
    args = []
    // todo: // ensure DLLs are moved to a consistent path across operating systems
    jvmArgs = ['-Djava.library.path=C:\\dev\\xframes-scala\\native']
}
